#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
    EULER 45
        Triangle, pentagonal, and hexagonal numbers are
        generated by the following formulae:
        Triangle 	  	Tn=n(n+1)/2 	  	1, 3, 6, 10, 15, ...
        Pentagonal 	Pn=n(3n−1)/2 	  	1, 5, 12, 22, 35, ...
        Hexagonal 	  	Hn=n(2n−1) 	  	1, 6, 15, 28, 45, ...

        It can be verified that T285 = P165 = H143 = 40755.
        Find the next triangle number that is also pentagonal and hexagonal.
"""
# =============================================================================
# (upper left label is the current label)
#
# SOLUTION: 1533776805
#
# STATUS: [ok]
# VERIFIED: [ok]
# EXECUTION TIME: [ok]
# =============================================================================

from math import sqrt, floor, ceil

def T(n):
    return int((n * (n +1))/2)

def P(n):
    return int((n * (3*n -1))/2)

def H(n):
    return int(n * (2*n -1))

def isT(n):
    inverse = (-1+sqrt(1+8*n))/2
    if floor(inverse) == ceil(inverse):
        return True #int(inverse)
    return False

def isP(n):
    inverse = (1+sqrt(1+24*n))/6
    if floor(inverse) == ceil(inverse):
        return True #int(inverse)
    return False

def isH(n):
    inverse = (1+sqrt(1+8*n))/4
    if floor(inverse) == ceil(inverse):
        return True #int(inverse)
    return False

def euler45():
    i=286
    while True:
        num = T(i)
        if isP(num) and isH(num):
            return num
        i+=1

#T(55385)
#P(31977)
#H(27693)
#1533776805

if __name__ == "__main__":
    print(euler45())
    # 1533776805
